# Usage:
#   To build the images:  docker compose build
#   To start up a specific service by name:  docker compose up <service_name>
#   To open an interactive shell to a running container:  docker exec -it <container_name> bash

version: "1.0"
services:
  # Base image containing dependencies.
  base:
    image: klab:base
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      args:
        ROS_DISTRO: noetic
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    privileged: True
    environment:
      ## Define any environment variables required for your application here.
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      # Allows devices to be accessed from the container.
      - /dev:/dev

  # Overlay image containing the example source code.
  # TODO (4.8) change the image and target to match your overlay image.
  overlay:
    extends: base
    # TODO (4.8) line below
    image: klab:overlay-example
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      # TODO (4.8) line below
      target: overlay-example
    group_add:
      # For arduino and other serial devices
      - dialout

  # Developer container
  dev:
    extends: overlay
    image: klab:dev
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}
    volumes:
      # Mount the source code
      - ./src/example-repo:/overlay_ws/src/example-repo:rw
      # Mount catkin build artifacts for faster rebuilds
      - ./.cache/noetic/build/:/overlay_ws/build/:rw
      - ./.cache/noetic/devel/:/overlay_ws/devel/:rw
      # Mount git config to allow git to be used from within the container
      - ${HOME}/.gitconfig:/etc/gitconfig:ro
    user: ${USERNAME:-devuser}
    command: sleep infinity

  # TODO Demo example for just running a launch file
  run-example:
    extends: overlay
    command: roslaunch example-package example-launch.launch